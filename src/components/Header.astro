---
export interface MenuOptions {
  texto: string;
  url: string;
}

const menuOptions: MenuOptions[] = [
  { texto: "Home", url: "/" },
  { texto: "About Us", url: "/about" },
  { texto: "Artists", url: "/artists" },
  { texto: "Contact", url: "/contact" },
];
---

<!-- HTML -->
<header>
  <nav class="fixed top-0 left-0 w-full z-50 bg-white border-gray-200 dark:bg-indigo-950">
    <div class="max-w-screen-xl flex flex-wrap justify-between mx-auto p-4">
      <!-- Logo -->
      <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse group">
        <span
          class="font-Handjet self-center text-6xl font-semibold whitespace-nowrap dark:text-white group-hover:text-gray-700 focus:text-gray-700 transition-colors duration-300 rainbow-text"
        >
          Art-A-Folio
        </span>
      </a>

      <!-- Mobile menu toggle button -->
      <div class="py-4 relative md:hidden">
        <button
          id="menu-button"
          type="button"
          class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600 transform transition-transform duration-300"
          aria-haspopup="true"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <svg
            class="w-5 h-5"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h12M4 10h12M4 14h12"></path>
          </svg>
        </button>

        <!-- Dropdown menu -->
        <div
  id="mobile-menu"
  class="absolute top-16 right-0 mt-2 w-48 bg-slate-600 rounded-lg shadow-lg z-50 hidden"
  aria-labelledby="menu-button"
>
  <ul class="py-2">
    <!-- Aquí se generan dinámicamente las opciones del menú -->
    {
      menuOptions.map((option) => (
        <li>
          <a
            href={option.url}
            class="block px-4 py-2 text-lg text-bold text-white hover:bg-slate-400 flex items-center justify-center"
          >
            {option.texto}
          </a>
        </li>
      ))
    }
  </ul>
</div>

      </div>

      <!-- Normal menu -->
      <div class="hidden py-4 w-full md:block md:w-auto" id="navbar-default">
        <ul
          class="font-bold flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-indigo-950 dark:border-gray-700"
        >
          {
            menuOptions.map((option) => (
              <li>
                <a
                  href={option.url}
                  onmouseover="this.classList.add('rainbow-text')"
                  onmouseout="this.classList.remove('rainbow-text')"
                  class="font-bold text-xl block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent"
                >
                  {option.texto}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </nav>
</header>

<style>
  .rainbow-text {
    background-image: linear-gradient(
      45deg,
      violet,
      indigo,
      blue,
      green,
      yellow,
      orange,
      red,
      violet
    );
    background-size: 600% 600%;
    color: transparent;
    -webkit-background-clip: text;
    background-clip: text;
    animation: rainbow 8s infinite linear;
  }

  @keyframes rainbow {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const menuButton = document.getElementById("menu-button");
    const mobileMenu = document.getElementById("mobile-menu");

    // Mostrar el menú móvil al hacer clic en el botón de menú
    menuButton?.addEventListener("click", function () {
      mobileMenu?.classList.remove("hidden");
    });

    // Ocultar el menú móvil al hacer clic en el botón de cierre
    const closeMenuButton = document.getElementById("close-menu-button");
    closeMenuButton?.addEventListener("click", function () {
      mobileMenu?.classList.add("hidden");
    });

    // Opcional: Escuchar clics fuera del menú móvil para cerrarlo
    document.addEventListener("click", function (event) {
      const target = event.target as HTMLElement; // Aseguramos que target sea de tipo HTMLElement
      if (!target.closest("#mobile-menu") && !target.closest("#menu-button")) {
        mobileMenu?.classList.add("hidden");
      }
    });
  });
</script>
